version: '3.9'
services:
  twitter-to-kafka-service:
    image: ${GROUP_ID}/twitter.to.kafka.service:${SERVICE_VERSION:-latest}
    ports:
      - "5005:5005"
    volumes:
      - "./docker-logs:/workspace/twitter-to-kafka-service/logs"
    user: root
    depends_on:
      - config-server
      - kafka-broker-1
      - kafka-broker-2
      - kafka-broker-3
    environment:
      - "JAVA_OPTS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005 -Xms128m -Xmx256m"
      - "LOGGING_LEVEL_COM_MICROSERVICES_DEMO=info"
      - "LOGGING_LEVEL_ROOT=info"
      - "KAFKA-CONFIG_TOPIC-NAME=twitter-topic"
      - "KAFKA-CONFIG_BOOTSTRAP-SERVERS=kafka-broker-1:9092, kafka-broker-2:9092, kafka-broker-3:9092"
      - "KAFKA-CONFIG_SCHEMA-REGISTRY-URL=http://schema-registry:8081"
      - "TWITTER-TO-KAFKA-SERVICE_ENABLE-MOCK-TWEETS=true"
      - "SPRING_CLOUD_CONFIG_URI=http://config-server:8888"
    networks:
      - ${GLOBAL_NETWORK:-services}

  setup-for-kafka-to-elastic:
    image: ubuntu
    user: "0"
    command: >
      /bin/sh -c '
        apt-get update && apt-get install curl -y;
        until curl -s -o /dev/null -w '%{http_code}' http://rest-proxy:8082/topics/twitter-topic | grep 200 > /dev/null; do sleep 30; done; 
        echo "Topic is available.";
        sleep 300;
        echo "All done.";
      '
    networks:
      - ${GLOBAL_NETWORK:-services}
    healthcheck:
        test: [ "CMD-SHELL", "curl -fs http://rest-proxy:8082/topics/twitter-topic || exit 1" ]
        interval: 3s
        timeout: 5s
        retries: 120

  kafka-to-elastic-service:
    image: ${GROUP_ID}/kafka.to.elastic.service:${SERVICE_VERSION:-latest}
    depends_on:
      setup-for-kafka-to-elastic:
        condition: service_healthy
      es01:
        condition: service_healthy
      es02:
        condition: service_healthy
      es03:
        condition: service_healthy
    ports:
      - "5006:5006"
    volumes:
      - "./docker-logs:/workspace/kafka-to-elastic-service/logs"
      - "./certs:/workspace/certs/ca"
    user: root
    environment:
      - "JAVA_OPTS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5006 -Xms128m -Xmx256m"
      - "LOGGING_LEVEL_COM_MICROSERVICES_DEMO=info"
      - "LOGGING_LEVEL_ROOT=info"
      - "KAFKA-CONFIG_TOPIC-NAME=twitter-topic"
      - "KAFKA-CONFIG_BOOTSTRAP-SERVERS=kafka-broker-1:9092, kafka-broker-2:9092, kafka-broker-3:9092"
      - "KAFKA-CONFIG_SCHEMA-REGISTRY-URL=http://schema-registry:8081"
      - "SPRING_CLOUD_CONFIG_URI=http://config-server:8888"
      - "ELASTIC-CONFIG_INDEX-NAME=twitter-index"
      - "CERT_PATH=/workspace/certs/ca/http_ca.crt"
      - "ELASTIC_USERNAME=elastic"
      - "ELASTIC_PWD=qwerty@123"
      - "ELASTIC-CONFIG_CONNECTION-URL=https://es01:9200"
    networks:
      - ${GLOBAL_NETWORK:-services}

  config-server:
    image: ${GROUP_ID}/config.server:${SERVICE_VERSION:-latest}
    ports:
      - "5007:5007"
      - "8888:8888"
    volumes:
      - "./docker-logs:/workspace/config-server/logs"
    environment:
      - "JAVA_OPTS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5007 -Xms128m -Xmx256m"
    networks:
      - ${GLOBAL_NETWORK:-services}

  elastic-query-service-1:
    image: ${GROUP_ID}/elastic.query.service:${SERVICE_VERSION:-latest}
    ports:
      - "5008:5008"
      - "8183:8183"
    volumes:
      - "./docker-logs:/workspace/elastic-query-service/logs"
      - "./certs:/workspace/certs/ca"
    user: root
    depends_on:
      es01:
        condition: service_healthy
      es02:
        condition: service_healthy
      es03:
        condition: service_healthy
    environment:
      - "JAVA_OPTS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5008 -Xms128m -Xmx256m"
      - "LOGGING_LEVEL_COM_MICROSERVICES_DEMO=info"
      - "LOGGING_LEVEL_ROOT=info"
      - "ELASTIC-CONFIG_INDEX-NAME=twitter-index"
      - "ELASTIC-CONFIG_CONNECTION-URL=https://es01:9200"
      - "SERVER_PORT=8183"
      - "SERVER_SERVLET_CONTEXT-PATH=/elastic-query-service"
      - "SPRING_CLOUD_CONFIG_URI=http://config-server:8888"
      - "CERT_PATH=/workspace/certs/ca/http_ca.crt"
      - "ELASTIC_USERNAME=elastic"
      - "ELASTIC_PWD=qwerty@123"
    networks:
      - ${GLOBAL_NETWORK:-services}

  elastic-query-service-2:
    image: ${GROUP_ID}/elastic.query.service:${SERVICE_VERSION:-latest}
    ports:
      - "5009:5009"
      - "8185:8185"
    volumes:
      - "./docker-logs:/workspace/elastic-query-service/logs"
      - "./certs:/workspace/certs/ca"
    user: root
    depends_on:
      es01:
        condition: service_healthy
      es02:
        condition: service_healthy
      es03:
        condition: service_healthy
    environment:
      - "JAVA_OPTS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5009 -Xms128m -Xmx256m"
      - "LOGGING_LEVEL_COM_MICROSERVICES_DEMO=info"
      - "LOGGING_LEVEL_ROOT=info"
      - "ELASTIC-CONFIG_INDEX-NAME=twitter-index"
      - "ELASTIC-CONFIG_CONNECTION-URL=https://es01:9200"
      - "SERVER_PORT=8185"
      - "SERVER_SERVLET_CONTEXT-PATH=/elastic-query-service"
      - "SPRING_CLOUD_CONFIG_URI=http://config-server:8888"
      - "CERT_PATH=/workspace/certs/ca/http_ca.crt"
      - "ELASTIC_USERNAME=elastic"
      - "ELASTIC_PWD=qwerty@123"
    networks:
      - ${GLOBAL_NETWORK:-services}

  elastic-query-web-client:
    image: ${GROUP_ID}/elastic.query.web.client:${SERVICE_VERSION:-latest}
    ports:
      - "5010:5010"
      - "8184:8184"
    volumes:
      - "./docker-logs:/workspace/elastic-query-web-client/logs"
    user: root
    depends_on:
      - config-server
    environment:
      - "JAVA_OPTS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5010 -Xms128m -Xmx256m"
      - "LOGGING_LEVEL_COM_MICROSERVICES_DEMO=info"
      - "LOGGING_LEVEL_ROOT=info"
      - "SERVER_PORT=8184"
      - "SERVER_SERVLET_CONTEXT-PATH=/elastic-query-web-client"
      - "SPRING_CLOUD_CONFIG_URI=http://config-server:8888"
      - "ELASTIC-QUERY-WEB-CLIENT_WEB-CLIENT_BASE-URL=http://elastic-query-service/elastic-query-service/documents"
      - "ELASTIC-QUERY-WEB-CLIENT_WEB-CLIENT_INSTANCES_0_ID=elastic-query-service-1"
      - "ELASTIC-QUERY-WEB-CLIENT_WEB-CLIENT_INSTANCES_0_HOST=elastic-query-service-1"
      - "ELASTIC-QUERY-WEB-CLIENT_WEB-CLIENT_INSTANCES_0_PORT=8183"
      - "ELASTIC-QUERY-WEB-CLIENT_WEB-CLIENT_INSTANCES_1_ID=elastic-query-service-2"
      - "ELASTIC-QUERY-WEB-CLIENT_WEB-CLIENT_INSTANCES_1_HOST=elastic-query-service-2"
      - "ELASTIC-QUERY-WEB-CLIENT_WEB-CLIENT_INSTANCES_1_PORT=8185"
    networks:
      - ${GLOBAL_NETWORK:-services}