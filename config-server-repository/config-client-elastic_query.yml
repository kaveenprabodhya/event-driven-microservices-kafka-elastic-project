elastic-query-service:
  version: v1
  custom-audience: elastic-query-service
  webclient:
    connect-timeout-ms: 10000
    read-timeout-ms: 10000
    write-timeout-ms: 10000
    max-in-memory-size: 10485760 # 10MB
    content-type: 'application/vnd.api.v1+json'
    accept-type: 'application/vnd.api.v1+json'
    query-type: 'ANALYTICS_DATABASE'
  query-from-kafka-state-store:
    method: GET
    uri: "http://gateway-service/kafka-streams-service/get-word-count-by-word/{word}"
    accept: ${elastic-query-service.webclient.accept-type}
  query-from-analytics-database:
    method: GET
    uri: "http://gateway-service/analytics-service/get-word-count-by-word/{word}"
    accept: ${elastic-query-service.webclient.accept-type}

server:
  port: 8183
  servlet:
    context-path: /

spring:
  cloud:
    loadBalancer:
      ribbon:
        enabled: false
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://host.docker.internal:7171/auth/realms/microservices
          jwk-set-uri: http://host.docker.internal:7171/auth/realms/microservices/protocol/openid-connect/certs
      client:
        registration:
          keycloak:
            client-id: 'elastic-query-service'
            client-secret: ENC(nmr9WnuyoVR3I1IU4QQwtw8RRyspSWnyGddDssAD2U8vXpsWPiLtYDFz05NB6x2/PHAfFU/40L9d0u8rzsEe1DwZQGC9q8IfUsfLkoQbnIM=)
            authorizationGrantType: client_credentials
        provider:
          keycloak:
            tokenUri: http://host.docker.internal:7171/auth/realms/microservices/protocol/openid-connect/token
  jpa:
    open-in-view: false
    show-sql: true
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
  datasource:
    url: jdbc:postgresql://host.docker.internal:5432/postgres?currentSchema=public&binaryTransfer=true&reWriteBatchedInserts=true
    username: postgres
    password: ENC(5UoG+GzJQlKNr8miPVvxRU6/FWeO/GLpFbADfifNTykTNMCLY26AsduIMcLLbq5z)
    driver-class-name: org.postgresql.Driver
    platform: postgres
    schema: classpath:init-schema.sql
    data: classpath:init-data.sql
    initialization-mode: always

elastic-query-config:
  text-field: text

elastic-config:
  index-name: twitter-index
  connection-url: https://localhost:9200
  connect-timeout-ms: 5000
  socket-timeout-ms: 30000

user-config:
  username: test
  password: ENC(jTycxuxkkuKaaCGM1h8L8c8IdfIKZ1lqOTEBh7n6BVmwZ0PPCux4iQpv30qXm3TE)
  roles: USER

springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html

security:
  paths-to-ignore: /api-docs/**, /swagger-ui/**, /swagger-resources/**, /swagger-ui.html, /v3/api-docs/**