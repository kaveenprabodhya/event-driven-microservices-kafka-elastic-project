spring:
  sql:
    init:
      mode: always
#  datasource:
#    url: jdbc:postgresql://localhost:5432/postgres?currentSchema=public&binaryTransfer=true&reWriteBatchedInserts=true
#    username: postgres
#    password: ENC(5UoG+GzJQlKNr8miPVvxRU6/FWeO/GLpFbADfifNTykTNMCLY26AsduIMcLLbq5z)
#    driver-class-name: org.postgresql.Driver
#    platform: postgres
#    schema: classpath:init-schema.sql
#    data: classpath:init-data.sql
#    initialization-mode: always
#
#elastic-query-service:
#  version: v1
#  custom-audience: elastic-query-service
#  webclient:
#    connect-timeout-ms: 20000
#    read-timeout-ms: 20000
#    write-timeout-ms: 20000
#    response-timeout-ms: 20000
#    max-in-memory-size: 10485760 # 10MB
#    content-type: 'application/vnd.api.v1+json'
#    accept-type: 'application/vnd.api.v1+json'
#    query-type: 'ANALYTICS_DATABASE'
#  query-from-kafka-state-store:
#    method: GET
#    uri: "http://gateway-service/kafka-streams-service/get-word-count-by-word/{word}"
#    accept: ${elastic-query-service.webclient.accept-type}
#  query-from-analytics-database:
#    method: GET
#    uri: "http://gateway-service/analytics-service/get-word-count-by-word/{word}"
#    accept: ${elastic-query-service.webclient.accept-type}
#
#server:
#  port: 8183
#  servlet:
#    context-path: /